{"ast":null,"code":"// this file can contain any custom function that can be used to many files.\nimport { Camera, CameraResultType } from '@capacitor/camera';\nvar Months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"]; // returns current date and time in the format\n// month/day/year - hr:min:sec\n\nconst getCurTimeDate = () => {\n  var obj = new Date();\n  var t = obj.getHours() + \":\" + obj.getMinutes() + \":\" + obj.getSeconds();\n  var d = Months[obj.getMonth()] + \" \" + obj.getDate() + \", \" + obj.getFullYear();\n  return d + \" - \" + t;\n}; // function to retrieve an image\n\n\nexport const takePicture = async () => {\n  const image = await Camera.getPhoto({\n    quality: 90,\n    allowEditing: true,\n    resultType: CameraResultType.Base64\n  }); // image.webPath will contain a path that can be set as an image src.\n  // You can access the original file using image.path, which can be\n  // passed to the Filesystem API to read the raw data of the image,\n  // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n\n  var imageUrl = image.base64String; // Can be set to the src of an image now\n  // imageElement.src = imageUrl;\n\n  return imageUrl;\n};\nexport default getCurTimeDate;","map":{"version":3,"sources":["/Users/malebomoleleki/Documents/GitHub/christianConnect/src/components/helpFunc.js"],"names":["Camera","CameraResultType","Months","getCurTimeDate","obj","Date","t","getHours","getMinutes","getSeconds","d","getMonth","getDate","getFullYear","takePicture","image","getPhoto","quality","allowEditing","resultType","Base64","imageUrl","base64String"],"mappings":"AAAA;AAEA,SAASA,MAAT,EAAiBC,gBAAjB,QAAyC,mBAAzC;AAIA,IAAIC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EACX,KADW,EACJ,KADI,EACG,KADH,EACU,KADV,EACiB,KADjB,EACwB,KADxB,CAAb,C,CAGA;AACA;;AACA,MAAMC,cAAc,GAAG,MAAM;AAC3B,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,MAAIC,CAAC,GAAGF,GAAG,CAACG,QAAJ,KAAiB,GAAjB,GAAsBH,GAAG,CAACI,UAAJ,EAAtB,GAAyC,GAAzC,GAA+CJ,GAAG,CAACK,UAAJ,EAAvD;AACA,MAAIC,CAAC,GAAGR,MAAM,CAACE,GAAG,CAACO,QAAJ,EAAD,CAAN,GAAyB,GAAzB,GAA+BP,GAAG,CAACQ,OAAJ,EAA/B,GAA+C,IAA/C,GAAsDR,GAAG,CAACS,WAAJ,EAA9D;AACA,SAAOH,CAAC,GAAG,KAAJ,GAAYJ,CAAnB;AACD,CALD,C,CAeA;;;AACA,OAAO,MAAMQ,WAAW,GAAG,YAAY;AACrC,QAAMC,KAAK,GAAG,MAAMf,MAAM,CAACgB,QAAP,CAAgB;AAClCC,IAAAA,OAAO,EAAE,EADyB;AAElCC,IAAAA,YAAY,EAAE,IAFoB;AAGlCC,IAAAA,UAAU,EAAElB,gBAAgB,CAACmB;AAHK,GAAhB,CAApB,CADqC,CAOrC;AACA;AACA;AACA;;AACA,MAAIC,QAAQ,GAAGN,KAAK,CAACO,YAArB,CAXqC,CAarC;AACA;;AACA,SAAOD,QAAP;AACD,CAhBM;AAmBP,eAAelB,cAAf","sourcesContent":["// this file can contain any custom function that can be used to many files.\n\nimport { Camera, CameraResultType } from '@capacitor/camera';\n\n\n\nvar Months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\",\n  \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"\n]\n// returns current date and time in the format\n// month/day/year - hr:min:sec\nconst getCurTimeDate = () => {\n  var obj = new Date();\n  var t = obj.getHours() + \":\"+ obj.getMinutes() + \":\" + obj.getSeconds();\n  var d = Months[obj.getMonth()] + \" \" + obj.getDate() + \", \" + obj.getFullYear();\n  return d + \" - \" + t;\n}\n\n\n\n\n\n\n\n\n\n// function to retrieve an image\nexport const takePicture = async () => {\n  const image = await Camera.getPhoto({\n    quality: 90,\n    allowEditing: true,\n    resultType: CameraResultType.Base64\n  });\n\n  // image.webPath will contain a path that can be set as an image src.\n  // You can access the original file using image.path, which can be\n  // passed to the Filesystem API to read the raw data of the image,\n  // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n  var imageUrl = image.base64String;\n\n  // Can be set to the src of an image now\n  // imageElement.src = imageUrl;\n  return imageUrl\n};\n\n\nexport default getCurTimeDate;"]},"metadata":{},"sourceType":"module"}