{"ast":null,"code":"var _jsxFileName = \"/Users/malebomoleleki/Documents/GitHub/christianConnect/src/pages/notes/Notes.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { IonHeader, IonTitle, IonToolbar, IonCard, IonSearchbar, IonApp, IonPage } from '@ionic/react';\nimport { IoMdArrowBack } from 'react-icons/io';\nimport { GrAdd } from 'react-icons/gr';\nimport \"./Notes.css\"; // import NoteContent from \"./NoteContent\";\n// import firebase functions and classes\n\nimport { auth } from \"../../firebase/firebase\";\nimport { getUserNotes } from \"../../firebase/firebase-help\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = () => {\n  _s();\n\n  // search notes\n  const [searchNote, setSearchNote] = useState(''); // Show Notes\n\n  const [notes, setNotes] = useState();\n  const history = useHistory(); // use to route dynamically\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    var _auth$currentUser;\n\n    // console.log( auth.currentUser?.providerData[0].displayName )\n    // get the value of auth.current user that keeps user's data.\n    var d = JSON.parse((_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.providerData[0].displayName); // console.log( d ); // for debuggin purposes\n\n    setUser(d); // set user for this page\n    // get current user notes.. after the promise is returned\n    // set current user notes to local state var.\n\n    getUserNotes(d.userId).then(setNotes);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    id: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile\",\n        children: /*#__PURE__*/_jsxDEV(IoMdArrowBack, {\n          id: \"backIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          id: \"title\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notesContainer\",\n      children: [/*#__PURE__*/_jsxDEV(IonSearchbar, {\n        id: \"searchNotes\",\n        value: searchNote,\n        onIonChange: e => setSearchNote(e.detail.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), notes ? notes.map((note, i) => /*#__PURE__*/_jsxDEV(IonCard, {\n        className: \"noteCards\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: e => {},\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"noteTitle\",\n            to: '/viewnotes?id=' + note.id,\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"noteDate\",\n          children: note.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./addnote\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(GrAdd, {\n          id: \"addNote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 31\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"11eyZS6aGFGBVhWiinqWyzCXHsU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/malebomoleleki/Documents/GitHub/christianConnect/src/pages/notes/Notes.jsx"],"names":["React","useState","useEffect","Link","useHistory","IonHeader","IonTitle","IonToolbar","IonCard","IonSearchbar","IonApp","IonPage","IoMdArrowBack","GrAdd","auth","getUserNotes","Notes","searchNote","setSearchNote","notes","setNotes","history","user","setUser","d","JSON","parse","currentUser","providerData","displayName","userId","then","e","detail","value","map","note","i","id","title","time"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,OAA1C,EAAmDC,YAAnD,EAAiEC,MAAjE,EAAyEC,OAAzE,QAAwF,cAAxF;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,aAAP,C,CACA;AAEA;;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,YAAT,QAA6B,8BAA7B;;;AAMA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C,CAFkB,CAGlB;;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,EAAlC;AACA,QAAMoB,OAAO,GAAGjB,UAAU,EAA1B,CALkB,CAKY;;AAC9B,QAAM,CAAEkB,IAAF,EAAQC,OAAR,IAAoBtB,QAAQ,EAAlC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd;AACA;AACA,QAAIsB,CAAC,GAAGC,IAAI,CAACC,KAAL,sBAAYZ,IAAI,CAACa,WAAjB,sDAAY,kBAAkBC,YAAlB,CAA+B,CAA/B,EAAkCC,WAA9C,CAAR,CAHc,CAId;;AACAN,IAAAA,OAAO,CAAEC,CAAF,CAAP,CALc,CAKD;AACb;AACA;;AACAT,IAAAA,YAAY,CAAES,CAAC,CAACM,MAAJ,CAAZ,CAAyBC,IAAzB,CAA+BX,QAA/B;AACD,GATQ,EASN,EATM,CAAT;AAaA,sBACE,QAAC,OAAD;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA,4BAGE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,QAAd;AAAA,8BAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA,+BAAoB,QAAC,aAAD;AAAe,UAAA,EAAE,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,UAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAaE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA,8BAGE,QAAC,YAAD;AAAc,QAAA,EAAE,EAAC,aAAjB;AAA+B,QAAA,KAAK,EAAEH,UAAtC;AAAkD,QAAA,WAAW,EAAEe,CAAC,IAAId,aAAa,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjF;AAAA;AAAA;AAAA;AAAA,cAHF,EAOIf,KAAK,GAAGA,KAAK,CAACgB,GAAN,CAAU,CAACC,IAAD,EAAMC,CAAN,kBAChB,QAAC,OAAD;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAA,gCAGE;AAAK,UAAA,OAAO,EAAGL,CAAD,IAAM,CAAG,CAAvB;AAAA,iCAA0B,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,WAAhB;AAA4B,YAAA,EAAE,EAAE,mBAAmBI,IAAI,CAACE,EAAxD;AAAA,sBAA8DF,IAAI,CAACG;AAAnE;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAHF,eAME;AAAO,UAAA,SAAS,EAAC,UAAjB;AAAA,oBAA6BH,IAAI,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAAcH,CAAd;AAAA;AAAA;AAAA;AAAA,cADM,CAAH,gBAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBV,eAqBE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA,qCAAsB,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAhED;;GAAMrB,K;UAKYZ,U;;;KALZY,K;AAkEN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from 'react-router-dom'\nimport { IonHeader, IonTitle, IonToolbar, IonCard, IonSearchbar, IonApp, IonPage } from '@ionic/react';\nimport { IoMdArrowBack } from 'react-icons/io'\nimport { GrAdd } from 'react-icons/gr'\nimport \"./Notes.css\";\n// import NoteContent from \"./NoteContent\";\n\n// import firebase functions and classes\nimport { auth } from \"../../firebase/firebase\";\nimport { getUserNotes } from \"../../firebase/firebase-help\";\n\n\n\n\n\nconst Notes = () => {\n  // search notes\n  const [searchNote, setSearchNote] = useState('');\n  // Show Notes\n  const [notes, setNotes] = useState();\n  const history = useHistory(); // use to route dynamically\n  const [ user, setUser ] = useState();\n\n\n\n  useEffect(() => {\n    // console.log( auth.currentUser?.providerData[0].displayName )\n    // get the value of auth.current user that keeps user's data.\n    var d = JSON.parse( auth.currentUser?.providerData[0].displayName );\n    // console.log( d ); // for debuggin purposes\n    setUser( d ) // set user for this page\n    // get current user notes.. after the promise is returned\n    // set current user notes to local state var.\n    getUserNotes( d.userId ).then( setNotes )\n  }, [] )\n  \n\n\n  return (\n    <IonPage id='mainContainer'>\n      \n      {/* header */}\n      <IonHeader id='header'>\n        {/* back arrow */}\n        <Link to='/profile'><IoMdArrowBack id='backIcon' /></Link>\n\n        {/* title */}\n        <IonToolbar>  \n          <IonTitle id='title'>Notes</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <div id='notesContainer'>\n\n        {/* search */}\n        <IonSearchbar id='searchNotes' value={searchNote} onIonChange={e => setSearchNote(e.detail.value)}></IonSearchbar>\n\n        {/* map all users notes */}\n        {\n          notes ? notes.map((note,i) => (\n            <IonCard key={i} className='noteCards' >\n\n              {/* note title */}\n              <h3  onClick={(e) =>{ }} ><Link className='noteTitle' to={'/viewnotes?id=' + note.id }>{note.title}</Link></h3>\n\n              {/* date created */}\n              <small className='noteDate'>{note.time}</small>\n            </IonCard>\n            )\n          ) : ( <h2>loading...</h2> )\n        }\n\n        {/* add note button */}\n        <Link to='./addnote'> <GrAdd id='addNote' /> </Link>\n\n      </div>\n\n    </IonPage>\n  );\n}\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}