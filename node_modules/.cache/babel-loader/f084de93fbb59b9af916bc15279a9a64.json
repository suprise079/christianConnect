{"ast":null,"code":"var _jsxFileName = \"/Users/malebomoleleki/Documents/GitHub/christianConnect/src/pages/Logins/Login/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { IonInput, IonPage, IonBackButton, IonButtons, IonHeader, IonToolbar, IonTitle, IonSelect, IonSelectOption, IonContent } from \"@ionic/react\";\nimport styled from \"styled-components\"; // firebase and db func\n\nimport { app, auth } from \"../../../firebase/firebase\";\nimport { updateProfile, signInWithPopup, GoogleAuthProvider, signInWithEmailAndPassword } from \"firebase/auth\"; // import js cookie for holding user data\n\nimport Cookies from 'js-cookie'; // react\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Context from \"../../../context/Context\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport \"../StylesForPages.css\";\nimport bg from \"./bg.png\";\nimport { useLocation } from \"react-router\";\nimport { getAllFellowships, getLeaderFs, LoginUser } from \"../../../firebase/firebase-help\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = styled(IonPage)`\n  position: relative;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n\n  background: white;\n  box-sizing: border-box;\n  z-index: -1;\n  * {\n    color: black;\n  }\n  #logins {\n    margin-top: 30%;\n    padding: 10px 3px;\n    // width:\n    background-image: url(\"${bg}\");\n    background-size: 42% 100%;\n    background-repeat: no-repeat;\n    background-position-x: right;\n  }\n  ion-input {\n    border: 1px solid gray;\n    width: 70%;\n    margin: 1.2% 5%;\n    background: transparent;\n  }\n  label {\n    margin: 1.2% 5%;\n    width: 70%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  button[type=\"submit\"] {\n    border: 2px solid #348d60 !important;\n    border-radius: 5px;\n    width: 30vw;\n    font-size: 1em;\n    padding: 1% 5%;\n    margin: 20px 5%;\n    color: #348d63;\n    border: 2px solid #348d60;\n    box-shadow: none;\n    background: transparent;\n  }\n  ion-header {\n    background-color: #348d63;\n    padding: 0;\n    border-radius: 0em 0em 1.3em 1.3em;\n    box-shadow: 0 0 10px #999;\n  }\n  ion-title {\n    margin: 0;\n    text-align: center;\n    color: white;\n  }\n  ion-back-button {\n    color: white;\n    position: absolute;\n  }\n`;\n_c = Body;\n\nconst Login = () => {\n  _s();\n\n  /* To know which type of user is logging in. (value either \"/SignUp\" for Leaders or \"\"/SignUpU\"for normal users\") */\n  // Trackers\n  const location = useLocation();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false); // user details\n\n  const {\n    curUser,\n    setCurUser,\n    isLoggedIn,\n    setIsLoggedIn,\n    setFellowship\n  } = useContext(Context);\n  const [showPassword, setshowPassword] = useState(false);\n  const [pswdType, setpswdType] = useState(\"password\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // use effect, run when pages loads\n\n  useEffect(() => {\n    // alert(\"login\", location.state );\n    // reset data in the cookie\n    Cookies.remove(\"userData\");\n    Cookies.remove(\"allFellowships\");\n    Cookies.remove(\"dummy\");\n  }, []); // check if the user is logged in\n\n  const handleChange = e => {\n    const val = e.target;\n\n    if (val.type === \"email\") {\n      setEmail(val.value);\n    } else if (val.type === \"password\" || val.type === \"text\") {\n      setPassword(val.value);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    await signInWithEmailAndPassword(auth, email, password).then(result => {\n      auth.onAuthStateChanged(user => {\n        if (user.email && user.uid) {\n          // pass user id from auth .. get user data from firestore ..\n          LoginUser(user.uid).then(data => {\n            // console.log( data );\n            // if data is true\n            if (data) {\n              // use cookies js to set user's dats\n              // console.log( data )\n              // set user data to session cookies...\n              Cookies.set(\"userData\", JSON.stringify(data)); // then get all fellowships from firebase and set them to\n              // session cookie\n\n              getAllFellowships().then(fellows => {\n                // console.log( Object.assign({}, fellows ) )\n                var afs = JSON.stringify(fellows); // var afs = JSON.stringify(  Object.assign({}, fellows ) );\n                // console.log( afs )\n                // set to cookies js session var\n\n                Cookies.set(\"allFellowships\", afs); // console.log( Cookies.get(\"AllFellowships\") )\n                // get leader's fellowship data... run only user is leader \n\n                if (data.isLeader) {\n                  // get user fellowship data. pass user auth id\n                  getLeaderFs(data.userId).then(refDoc => {\n                    var fs = refDoc;\n\n                    if (fs) {\n                      // if user data is valid and available\n                      // set data in global context\n                      setFellowship(fs); // console.log( fs );\n                      // set current leader fs in session cookie\n\n                      Cookies.set(\"curLeaderFs\", JSON.stringify(fs));\n                    }\n\n                    console.log(\"here\");\n                    history.push(\"/userhome?user=\" + data.userId); // route to user page\n                  });\n                } // console.log( data )\n\n\n                setEmail(\"\");\n                setPassword(\"\");\n                setLoading(false);\n                history.push(\"/userhome?user=\" + data.userId); // route to user page\n              });\n            }\n          });\n        } else {\n          history.push(\"/Login\");\n        }\n      });\n    }).catch(err => {\n      setLoading(false); // error handling\n\n      if (err.code.includes(\"invalid-email\")) {\n        alert(\"Invalid User Email\");\n        setEmail(\"\");\n        setPassword(\"\");\n      } else if (err.code.includes(\"auth/user-not-found\")) {\n        alert(\"User Not Found.\");\n        setEmail(\"\");\n        setPassword(\"\");\n      } else if (err.code.includes(\"auth/wrong-password\")) {\n        alert(\"Wrong Password\");\n        setPassword(\"\");\n      } else if (err.code.includes(\"auth/network-request-failed\")) {\n        alert(\"Network Error, Please Check Your Network Connection\");\n        setPassword(\"\");\n      } else {\n        alert(err);\n        console.error(err);\n        setEmail(\"\");\n        setPassword(\"\");\n      }\n    });\n    console.log(\"HERE AND HERE\");\n    setLoading(false);\n  };\n\n  const loginWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken; // The signed-in user info.\n\n      const user = result.user;\n      console.log(`results : ${token},${credential},${user}`);\n      setIsLoggedIn(true); // console.log(user);\n      // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.email; // The AuthCredential type that was used.\n\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      console.log(`Errors : ${errorCode},${errorMessage},${email},${credential}`); // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Body, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      color: \"white\",\n      className: \"ion-no-border\",\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        color: \"white\",\n        children: [/*#__PURE__*/_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: /*#__PURE__*/_jsxDEV(IonBackButton, {\n            defaultHref: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"logins\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"/\" // /* method=\"post\" */ onSubmit={(e) => handleSubmit(e)}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Email address\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            id: \"email\",\n            required: true,\n            autofocus: true,\n            type: \"email\",\n            name: \"Email address\",\n            clearInput: \"true\",\n            className: \"inputField\",\n            value: email,\n            onIonChange: e => {\n              handleChange(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Password\",\n            children: [\"Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                setshowPassword(showPassword ? false : true);\n                setpswdType(showPassword ? \"password\" : \"text\");\n              },\n              children: showPassword ? /*#__PURE__*/_jsxDEV(AiFillEyeInvisible, {\n                size: \"2px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(AiFillEye, {\n                size: \"20px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n            required: true,\n            type: pswdType,\n            clearInput: \"true\",\n            className: \"inputField\",\n            value: password,\n            onIonChange: e => {\n              handleChange(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleSubmit(e),\n            type: \"submit\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                borderColor: \"#348d60\"\n              },\n              className: \"loader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this) : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"google-login-text\",\n          children: \"Login with \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            loginWithGoogle();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"google-icon\",\n            children: /*#__PURE__*/_jsxDEV(FcGoogle, {\n              size: \"20px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"google-text\",\n            children: \"Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"haveAcc\",\n        children: [\"Don't have an account ?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"fromWelcome\" // to={{ pathname: location.state, state: location.state }}\n          ,\n          to: \"/SignUp\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"haveAcc\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"fromWelcome\",\n          onClick: e => alert(\"No Data\"),\n          to: \"/Login\",\n          children: \"Forgot password ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"YZ59xefRFDLZRHg/6GJa2zsxBNQ=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c2 = Login;\nexport default Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Body\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/Users/malebomoleleki/Documents/GitHub/christianConnect/src/pages/Logins/Login/index.jsx"],"names":["IonInput","IonPage","IonBackButton","IonButtons","IonHeader","IonToolbar","IonTitle","IonSelect","IonSelectOption","IonContent","styled","app","auth","updateProfile","signInWithPopup","GoogleAuthProvider","signInWithEmailAndPassword","Cookies","Link","useHistory","React","useState","useEffect","useContext","Context","AiFillEyeInvisible","AiFillEye","FcGoogle","bg","useLocation","getAllFellowships","getLeaderFs","LoginUser","Body","Login","location","history","loading","setLoading","curUser","setCurUser","isLoggedIn","setIsLoggedIn","setFellowship","showPassword","setshowPassword","pswdType","setpswdType","email","setEmail","password","setPassword","remove","handleChange","e","val","target","type","value","handleSubmit","preventDefault","then","result","onAuthStateChanged","user","uid","data","set","JSON","stringify","fellows","afs","isLeader","userId","refDoc","fs","console","log","push","catch","err","code","includes","alert","error","loginWithGoogle","provider","credential","credentialFromResult","token","accessToken","errorCode","errorMessage","message","credentialFromError","borderColor"],"mappings":"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","sourcesContent":["import {\n  IonInput,\n  IonPage,\n  IonBackButton,\n  IonButtons,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonSelect,\n  IonSelectOption,\n  IonContent,\n} from \"@ionic/react\";\n\nimport styled from \"styled-components\";\n\n// firebase and db func\nimport { app, auth } from \"../../../firebase/firebase\";\n\nimport {\n  updateProfile,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\n// import js cookie for holding user data\nimport Cookies from 'js-cookie';\n\n// react\nimport { Link, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Context from \"../../../context/Context\";\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport \"../StylesForPages.css\";\nimport bg from \"./bg.png\";\nimport { useLocation } from \"react-router\";\nimport { getAllFellowships, getLeaderFs, LoginUser\n} from \"../../../firebase/firebase-help\";\n\nconst Body = styled(IonPage)`\n  position: relative;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n\n  background: white;\n  box-sizing: border-box;\n  z-index: -1;\n  * {\n    color: black;\n  }\n  #logins {\n    margin-top: 30%;\n    padding: 10px 3px;\n    // width:\n    background-image: url(\"${bg}\");\n    background-size: 42% 100%;\n    background-repeat: no-repeat;\n    background-position-x: right;\n  }\n  ion-input {\n    border: 1px solid gray;\n    width: 70%;\n    margin: 1.2% 5%;\n    background: transparent;\n  }\n  label {\n    margin: 1.2% 5%;\n    width: 70%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  button[type=\"submit\"] {\n    border: 2px solid #348d60 !important;\n    border-radius: 5px;\n    width: 30vw;\n    font-size: 1em;\n    padding: 1% 5%;\n    margin: 20px 5%;\n    color: #348d63;\n    border: 2px solid #348d60;\n    box-shadow: none;\n    background: transparent;\n  }\n  ion-header {\n    background-color: #348d63;\n    padding: 0;\n    border-radius: 0em 0em 1.3em 1.3em;\n    box-shadow: 0 0 10px #999;\n  }\n  ion-title {\n    margin: 0;\n    text-align: center;\n    color: white;\n  }\n  ion-back-button {\n    color: white;\n    position: absolute;\n  }\n`;\n\nconst Login = () => {\n  /* To know which type of user is logging in. (value either \"/SignUp\" for Leaders or \"\"/SignUpU\"for normal users\") */\n  // Trackers\n  const location = useLocation();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  // user details\n  const { curUser, setCurUser, isLoggedIn, setIsLoggedIn, setFellowship } = useContext(Context);\n  const [showPassword, setshowPassword] = useState(false);\n  const [pswdType, setpswdType] = useState(\"password\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // use effect, run when pages loads\n  useEffect(() => {\n    // alert(\"login\", location.state );\n\n\n    // reset data in the cookie\n    Cookies.remove(\"userData\");\n    Cookies.remove(\"allFellowships\");\n    Cookies.remove(\"dummy\");\n\n  }, [])\n\n  // check if the user is logged in\n  const handleChange = (e) => {\n    const val = e.target;\n    if (val.type === \"email\") {\n      setEmail(val.value);\n    } else if (val.type === \"password\" || val.type === \"text\") {\n      setPassword(val.value);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    await signInWithEmailAndPassword(auth, email, password)\n    .then((result) => {\n      auth.onAuthStateChanged((user) => {\n        if (user.email && user.uid ) {\n          // pass user id from auth .. get user data from firestore ..\n          LoginUser( user.uid ).then( data => {\n            // console.log( data );\n            // if data is true\n            if( data ) {\n              // use cookies js to set user's dats\n              // console.log( data )\n              // set user data to session cookies...\n              Cookies.set(\"userData\", JSON.stringify(data) );\n\n              // then get all fellowships from firebase and set them to\n              // session cookie\n              getAllFellowships().then( fellows => {\n                // console.log( Object.assign({}, fellows ) )\n                var afs = JSON.stringify( fellows );\n                // var afs = JSON.stringify(  Object.assign({}, fellows ) );\n                // console.log( afs )\n                // set to cookies js session var\n                Cookies.set(\"allFellowships\", afs )\n                // console.log( Cookies.get(\"AllFellowships\") )\n\n\n                // get leader's fellowship data... run only user is leader \n                if( data.isLeader ) {\n                  // get user fellowship data. pass user auth id\n                  getLeaderFs( data.userId ).then( refDoc => {\n                    var fs = refDoc;\n                    if( fs ) { // if user data is valid and available\n                      // set data in global context\n                      setFellowship( fs );\n                      // console.log( fs );\n                      // set current leader fs in session cookie\n                      Cookies.set(\"curLeaderFs\", JSON.stringify( fs ) )\n                    }\n                    console.log(\"here\")\n                    history.push(\"/userhome?user=\" + data.userId ); // route to user page\n                  })\n\n                }\n\n                // console.log( data )\n                setEmail(\"\"); setPassword(\"\"); setLoading(false);\n                history.push(\"/userhome?user=\" + data.userId ); // route to user page\n\n              })\n              \n            }\n          })\n        }else{ history.push(\"/Login\"); }\n      });\n    })\n    .catch((err) => {\n      setLoading(false);\n      // error handling\n      if( err.code.includes(\"invalid-email\") ) {\n        alert( \"Invalid User Email\" ); setEmail(\"\"); setPassword(\"\");\n      }\n      else if ( err.code.includes(\"auth/user-not-found\") ) {\n        alert(\"User Not Found.\"); setEmail(\"\"); setPassword(\"\");\n      }\n      else if ( err.code.includes(\"auth/wrong-password\") ) {\n        alert(\"Wrong Password\"); setPassword(\"\");\n      }\n      else if ( err.code.includes(\"auth/network-request-failed\") ) {\n        alert(\"Network Error, Please Check Your Network Connection\");\n        setPassword(\"\");\n      }\n      else { alert( err ); console.error( err )\n        setEmail(\"\"); setPassword(\"\");\n      }\n    });\n    console.log(\"HERE AND HERE\")\n    setLoading( false );\n  };\n\n\n  const loginWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        console.log(`results : ${token},${credential},${user}`);\n        setIsLoggedIn(true);\n        // console.log(user);\n        // ...\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        console.log(\n          `Errors : ${errorCode},${errorMessage},${email},${credential}`\n        );\n        // ...\n      });\n  };\n\n  return (\n    <Body>\n      <IonHeader color=\"white\" className=\"ion-no-border\">\n        <IonToolbar color=\"white\">\n          <IonButtons slot=\"start\">\n            <IonBackButton defaultHref=\"/\" />\n          </IonButtons>\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <div id=\"logins\">\n          <form\n            action=\"/\"\n            // /* method=\"post\" */ onSubmit={(e) => handleSubmit(e)}\n          >\n            <label htmlFor=\"Email address\">Email</label>\n            <IonInput\n              id=\"email\"\n              required\n              autofocus\n              type=\"email\"\n              name=\"Email address\"\n              clearInput=\"true\"\n              className=\"inputField\"\n              value={email}\n              onIonChange={(e) => {\n                handleChange(e);\n              }}\n            />\n            <label htmlFor=\"Password\">\n              Password\n              <span\n                onClick={() => {\n                  setshowPassword(showPassword ? false : true);\n                  setpswdType(showPassword ? \"password\" : \"text\");\n                }}\n              >\n                {showPassword ? (\n                  <AiFillEyeInvisible size=\"2px\" />\n                ) : (\n                  <AiFillEye size=\"20px\" />\n                )}\n              </span>\n            </label>\n            <IonInput\n              required\n              type={pswdType}\n              clearInput=\"true\"\n              className=\"inputField\"\n              value={password}\n              onIonChange={(e) => {\n                handleChange(e);\n              }}\n            />\n            {/* <input type=\"submit\" value={loading ? <span className=\"loader\"></span> : \"Login\"} /> */}\n            <button\n              onClick={ e => handleSubmit(e) }\n              type=\"submit\">\n              {loading ? (\n                <span\n                  style={{ borderColor: \"#348d60\" }}\n                  className=\"loader\"\n                ></span>\n              ) : (\n                \"Login\"\n              )}\n            </button>\n          </form>\n        </div>\n\n        <div className=\"google-container\">\n          <span className=\"google-login-text\">Login with </span>\n          <button\n            onClick={() => {\n              loginWithGoogle();\n            }}\n          >\n            <span className=\"google-icon\">\n              <FcGoogle size=\"20px\" />\n            </span>\n            <span className=\"google-text\">Google</span>\n          </button>\n        </div>\n\n        <div className=\"haveAcc\">\n          Don't have an account ?{\" \"}\n          <Link\n            className=\"fromWelcome\"\n            // to={{ pathname: location.state, state: location.state }}\n            to={ \"/SignUp\" }\n          >\n            Register\n          </Link>\n          {/* The line of code above uses a value from the welcome page to know what \n          type of user wanna register and determines the exact route accordingly */}\n        </div>\n\n        <div className=\"haveAcc\">\n          {/* set forgot password page */}\n          <Link\n            className=\"fromWelcome\"\n            onClick={(e) => alert(\"No Data\")}\n            to=\"/Login\"\n          >\n            Forgot password ?\n          </Link>\n        </div>\n      </IonContent>\n    </Body>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}